思路：
ans = new Node(-1) // ans 为需要返回的头节点
cur = ans
// l1和l2分别为需要合并的两个链表的头节点
while l1 和 l2 都不为空
    cur.next = min(l1.val, l2.val)
    更新较小的指针，往后移动一位
if l1 == null
   cur.next = l2
if l2 == null
   cur.next = l1
return ans.next

代码：
var mergeTwoLists = function(l1, l2) {
    let newHead = new ListNode(-1);
    let pre = newHead;
    while(l1&&l2){
        if(l1.val >= l2.val){
           pre.next = l2;
           l2 = l2.next;
        }
        else if(l1.val < l2.val){
            pre.next = l1;
            l1=l1.next;
        }
        pre = pre.next;
    }
    if(l2){
        pre.next = l2;
    }
    if(l1){
        pre.next = l1;
    }
    return newHead.next;
};

复杂度分析：
时间复杂度：O(N)
空间复杂度：O(1)
