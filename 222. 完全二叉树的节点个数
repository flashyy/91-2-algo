思路：求完全二叉树的结点个数可以用二叉树层序遍历的方法,即为BFS。也可以用DFS,每遍历到一个结点就加一。

代码：
DFS:
var countNodes = function(root) {
   return root ? countNodes(root.left)+countNodes(root.right)+1:0;
};
BFS：
var countNodes = function(root) {
   if(!root){
       return 0;
   }
   let queue = [],nums = 0;
   queue.push(root);
   while(queue.length !== 0){
        let node = queue.shift();
        nums++;
        if(node.left){
            queue.push(node.left);
        }
        if(node.right){
            queue.push(node.right);
        }
   }
   return nums;
};

复杂度分析：
BFS
时间复杂度：O(n)
空间复杂度：O(h) 队列的最大长度
DFS 
时间复杂度:O(n)
空间复杂度:O(h) 递归的次数，树的高度
