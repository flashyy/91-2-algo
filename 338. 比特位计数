思路：
i(二进制元素)的1的个数由i/2(二进制元素)的1个数和i%2之和所决定。
代码：
var countBits = function(num) {
    if(num === 0){
        return [0];
    }
    if(num === 1){
        return [0,1];
    }
    const dp = new Array(num+1).fill(0);
    for(let i=1;i<=num;i++){
        dp[i] = dp[i>>1]+(i&1);
    }
    return dp;
};
复杂度分析：
时间复杂度：O(n)
空间复杂度：O(n)
