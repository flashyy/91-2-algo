思路：
利用滚动数组的方式，因为第n个状态由第n-1个和第n-2状态得出，所以滚动数组求出最后一个状态。
代码：
var climbStairs = function(n) {
    let p=0,q=0,r=1;
    for(let i=1;i<=n;i++){
        p = q;
        q = r;
        r = p+q;
    }
    return r;
};
复杂度分析：
时间复杂度：循环执行 n 次，每次花费常数的时间代价，故渐进时间复杂度为 O(n)。
空间复杂度：这里只用了常数个变量作为辅助空间，故渐进空间复杂度为 O(1)。
